		ITEtech IT913x DVB-T USB Linux TV Driver Installation Guide
					2017/12/05
			Copyright (C) 2007-2017 ITE Technologies, INC.

1. Release note

	This software package release.
	Driver component version information:
	DRIVER_RELEASE_VERSION       : v17.12.05.1
	FW_RELEASE_VERSION           : V1_0_26_2
	OMEGA2_FW_RELEASE_VERSION    : V3_31_0_0
	OMEGA2I_FW_RELEASE_VERSION   : V3_32_0_1_I
	OMEGA2W_FW_RELEASE_VERSION   : V3_34_0_0_W
	API_RELEASE_VERSION          : 203.20160914.0

	The driver is for ITEtech IT9135 and IT9137 based USB TV module and operates on Linux platform.
	This release supports x86 32bit and 64bit CPU families in Linux kernel 4.0.0.

	Note:
		There is a build-in it913x driver in the Linux kernel, please make sure the
		"DVB_AF9035", "DVB_USB_AF9035" and DVB_USB_IT913X" flags are disabled in your kernel.

2. Install Driver

	To compile the driver against running kernel, simply invoke "make" in the source
	code directory. Please make sure the build environment is prepared for an
	out-of-tree module compilation. To do this, check the following folders:

	# ls -al /lib/modules/`uname -r`/build

	The source folder must contain kernel source code for driver to compile.

	1) In this folder, type the following command to install driver.

		# cd /it913x_driver
		# make
		# make install

		Notice: Uninstall driver command:
		# make remove

	2) Plug in the device and check the message to make sure the driver is work normally.
		# cat /var/log/messages

		log messages:

		dvb-usb: found a 'ITEtech USB2.0 DVB-T Recevier' in warm state.
		dvb-usb: will pass the complete MPEG2 transport stream to the software demuxer.
		dvb-usb: ITEtech USB2.0 DVB-T Recevier successfully initialized and connected.

		# lsmod|more

		Module info:

		Module                  Size  Used by

		dvb_usb_it913x         -----  0 
		dvb_usb                -----  1 dvb_usb_it913x
		dvb_core               -----  1 dvb_usb

3. Feature descriptions
	IT913x Linux driver is implemented with the video for Linux (V4L) interface
	that greatly simplifies software integration. It performed the tasks such as
	initialization, channel bandwidth selection, channel scanning and acquisition,
	and PID filter setting. Users also have access to all the relevant 
	signal statistic information generated by the IC, post-Viterbi bit error
	rate(BER), uncorrectable Reed-Solomon (RS) packet count, signal strength,
	and signal quality indicator.

	One sample program with source codes are included in the driver package.
	The sample program demonstrate how to access the V4L and the device in
	DVB-T mode.

4. Revision history
	-----------------------
		v17.12.05.1
	-----------------------
	  - Add 5MHz bandwidth support
	  
	-----------------------
		v17.09.14.1
	-----------------------
	  - [BF] Fix bug that could not write 32 bytes to EEPROM simultaneously -- modify to write 8 bytes per each time
	  - [M]  Modify to support linux kernel to 4.12.x
	  - [U]  Update API code to 203.20160914.0

	-----------------------
		v17.03.31.1
	-----------------------
	  - [M]  Add extra function to support "compat_ioctl"

	-----------------------
		v16.11.07.1
	-----------------------
	  - [BF] Fix bug for multi PIP and DCA mode 
	         --- could not get the correct user AP's handle number
	  - [U]  Update programming guide --- ver 1.7

	-----------------------
		v16.10.31.1
	-----------------------
	- [M]  Add "Scan 2.4G Free Band" for testkit
	       --- Update OMEGA2W_FW_RELEASE_VERSION to V3_34_0_0_W
	- [M]  Add extra EEPROM read/write item "TS mode" 
	- [M]  Remove the on/off RFFC2071 behavior during turn on/off user's ap.
	- [M]  Temporary apply DCA mode's behavior to DCA+PIP mode 
	- [BF] Fix bug that when using DCA dongle could not get the correct corresponding strength
	- [BF] Fix some bug to support linux kernel till 4.6.x 
	- [BF] Block some particular behavior of v4l 
	       --- because it would affect the DCA mode's lock behavior 
	- [U]  Update programming guide --- ver 1.6

	-----------------------
		v16.09.22.1
	-----------------------
	- [M]  Modify get lock status -- Due to some customer said the old method would influence performance
    - [M]  Testkit would show NULL packet(0x1FFF) as default setting
	- [M]  Add new function could filter out NULL packet 
	- [M]  Add new function could set PID filter via v4l ioctl interface 
	- [M]  Turn off RFFC2071 led light when close testkit
	- [BF] Fix bug for write master latch time to register(for RFFC2071) 
	- [BF] Fix bug that "Get_Packet" function in testkit -- rewrite this function 
	- [U]  Update programming guide --- ver 1.5

	-----------------------
		v16.08.12.1
	-----------------------
	- [A]  Update v4l code to support latest kernel version(4.6.x) 
	- [U]  Update programming guide --- ver 1.3
	- [U]  Update API code to 2.3.20160722.0 --- support RFFC2071 + Omega_DCA
	- [U]  Update FirmwareV2W (OMEGA2W_FW_RELEASE_VERSION "V3_33_0_0_W) --- support RFFC2071 + Omega_DCA
	- [M]  Modify driver code to support RFFC2071 with IT913x DCA mode
	- [M]  Add three EEPROM address for DCA FPGA latch time
	- [BF] Fix bug that could not get "device handle 1"'s SNR value when simultaneously using two DCA dongle  
	- [BF] Fix bug that in kernel 2.6.29 would cause compiler error
	- [BF] The implement of "get_frontend" function pointer is different in kernel 4.6.x

	-----------------------
		v16.07.25.1
	-----------------------
	- [M]  Add flexible quit key for "Get_Statistic" and "Get_Packet" in testkit.
		   (Users press "A" or "a" can easily quit the "getting packet loop")
	- [BF] Fix bug that cu_install might cause the following problem
	       "insmod: error inserting 'dvb-usb-it930x.ko': -1 Unknown symbol in module"
	- [BF] Fix some error in programming guide --- release ver.1.2

	-----------------------
		v16.07.07.1
	-----------------------
	- [M] Change dynamic set URB buffer size
	      --- 1. Change the parameter name from URB_NUM to URB_BUFSIZE
		      2. Users should calculate the actually URB buffer size 
			     ex: 
				    if user want to set URB_BUFSIZE=188*174=32712
				    users should insert:
                      # make cu_install URB_BUFSIZE=32712
			  3. If user insert a number which is not divisible by 188, driver would align this number to a 188 multiple. 

 	-----------------------
		v16.06.14.1
	-----------------------
	- [M] Modify the define name from  "EEPROM_DEVICEID_ADDRESS" to "EEPROM_BOARDID_ADDRESS"
       
	-----------------------
		v16.05.26.1
	-----------------------
	- [BF] Fix some wrong spelling words in testkit 
	- [BF] Fix bug that the displaying Processor type in Read/Write register function is not correct 
	- [M]  Remove some un-using variables
	- [A]  Add IT913x_linux programming guide
    
	-----------------------
		v16.04.20.1
	-----------------------
	- [M] Modify Testkit "Find_Free_Chan" -- support 900MHz and 2.4GHz find free channel

    -----------------------
		v16.04.08.1
	-----------------------
	- [M] Add additional items (DeviceId and TunerId) for testkit get driver info
	- [M] Support Dynamic URB size
	      --- Add two additional targets for driver Makefile(cu_install and cu_remove) 

	-----------------------
		v16.04.06.1
	-----------------------
	- [M] Modify testkit to get driver information

	-----------------------
		v16.04.06.1
	-----------------------
	- [A] Add RFFC2072 PA code
	- [U] Update API code to 203.20160330.0 
          --- support RFFC2072
	- [M] Modify driver to support 2.4G
	
	-----------------------
		v16.03.16.1
	-----------------------
	- [M] Move read EEPROM deivce_id code to correct place
	  	  (get this value after get EEPROM valid bit)
	- [A] Add new function in testkit --- Get Free Channels

	-----------------------
		v16.03.04.1
	-----------------------
	- [A]  Add ADRF6655 PA code 
	- [A]  Add V2W FW V3_31_0_0_W 
	- [M]  Modify driver to support 2.4G
	- [BF] Fix some error handle return value

	-----------------------
		v16.01.26.1
	-----------------------
	- Update the V2I FW to V3_32_0_1_I

	-----------------------
		v16.01.22.1
	-----------------------
	- Fix the warm boot issue
	
	-----------------------
		v15.11.05.1
	-----------------------
	- Sync software and hardware USB urb size to #define User_USB20_FRAME_SIZE
	- Add error check for copy_from/to_user function
	
	-----------------------
		v15.10.22.1
	-----------------------
	- Report the strength status of 2 chips for DCA mode.
	- Register one driver handle at DCA mode
	- Add copy_from/to_user function to ioctl interface

	-----------------------
		v15.06.10.1
	-----------------------
	- Update Testkit.
		1. Support block read.

	-----------------------
		v15.05.15.1
	-----------------------
	- Support Linux kernel 3.17.0. ~ 4.0.0.

	-----------------------
		v15.03.27.1
	-----------------------
	- Update OMEGA2 V2 firmware (V3_31_0_0).
		1. Patch DCA issue.

	-----------------------
		v15.01.13.1
	-----------------------
	- Update OMEGA2 V2I firmware (V3_30_0_0_I).
	- Update API (203.20150112.0).
	- Update SNR function.

	-----------------------
		v14.08.26.1
	-----------------------
	- Fix pid filter not work issue.
	- Update makefile.
	- Update OMEGA2 V2 firmware (V3_25_0_0).
	- Update OMEGA2 V2I firmware (V3_26_0_0_I).
	- Support Linux kernel 3.13.0. ~ 3.16.0.

	-----------------------
		v14.01.23.1
	-----------------------
	- Update ioctl command.
		1. Add IT9179 UART command.
	- Update makefile.
	- Fix setting bandwidth not correct issue.

	-----------------------
		v13.12.24.1
	-----------------------
	- Support 64-bit kernel.
	- Update API (203.20131218.0).
	- Update OMEGA2 V2 firmware (V3_18_0_0).
	- Update OMEGA2 V2I firmware (V3_22_0_0_I).
	- Support Linux kernel 3.9.0. ~ 3.12.0.

	-----------------------
		v13.05.17.1
	-----------------------
	- Fixed sometimes system hanging problem.
		1. Change mdelay to msleep.
		2. Fixed global variable.
	- Remove duplicate file.
	- Update API to 203.20130502.0
	- Update OMEGA2 V2I firmware to V3_17_0_0_I.
	- Update ioctl command.
		1. Delete unsupport command.
		2. Sync native version.
	- Update Testkit.
		1. Change input bandwidth parameter.
		2. Change process of open handle.
		3. Fixed Statistics of BER not correct.
	
	-----------------------
		v13.04.26.1
	-----------------------
	- Define bandwidth 1.712M to 2M.
	- Change mutex function.

	-----------------------
		v13.04.15.1
	-----------------------
	- Change process of disconnect.
	- Skip frequency lock with +-500KHz
	- Unlock limit of setting bandwidth.
	
	-----------------------
		v13.03.29.1
	-----------------------
	- Unlock limit of setting frequency.
	- Remove hot plugging function.

	-----------------------
		v13.03.18.1
	-----------------------
	- Add hot plugging function.
	- Fixed hibernate issue.
	- Fixed power control issue.
	- Fixed IR crash issue.
	- Fixed signal dbm issue.
	- Fixed check firmware version not correct issue.
	- Fixed testkit overflow issue.
	- Fixed warning messages.
	- Support Linux kernel to 3.7.0.
	- Support Linux kernel to 3.8.0.

	-----------------------
		v12.12.28.1
	-----------------------
	- Fixed suspend issue.

	-----------------------
		v12.12.14.1
	-----------------------	
	- Add getSignalStrengthIndication function.

	-----------------------
		v12.12.04.1
	-----------------------
	- Update OMEGA2 firmware.
	- Fixed non-dynamic minors issue.

	-----------------------
		v12.11.12.1  
	-----------------------
	- Update API to 203.20121031.3.
	- Fix urb control buffer alloc/free issue.

	-----------------------
		v12.11.06.1
	-----------------------
	- Update API to 203.20120831.0.
	- Add OMEGA2 V2I firmware.
	- Change usb handle name to usb-it913x.
	- Support Linux kernel to 3.6.0.

	-----------------------
		v12.08.15.1
	-----------------------
	- Add one "dvb-usb-it91351" handler on /dev for PIP dongle.
	- Fixed 0 byte issue.
	- Fixed CPU waiting issue for get signal statistic (Use msleep).
	- Fixed USB hub reboot error issue (Get FW version not correct).
	- Support Linux kernel to 3.5.0.

	-----------------------
		v12.04.02.1
	-----------------------
	- Support Linux kernel to 3.1.0.
	- Support Linux kernel to 3.2.0.

	-----------------------
		v11.12.22.1
	-----------------------
	- Update OmegaII FW and tuner scripts to V3_10_1_0.
	- Support Linux kernel to 3.0.0.

	-----------------------
		v11.10.11.1
	-----------------------
	- Update OmegaII FW and tuner scripts to V3_8_0_0.

	-----------------------
		v11.08.03.1
	-----------------------
	- Update OmegaI FW and tuner scripts to V1_0_26_02.
	- Update OmegaII FW and tuner scripts to V3_7_0_0.
	- Add RC function(refer to 6. Remote Control usage).
	- Fixed the second PIP dongle can not lock issue.
	- Fixed xine player switch empty channel hang up issue.
	- Fixed nec rc repeat issue.
	- Modified makefile.

	-----------------------
		v11.06.21.1
	-----------------------
	- Update OmegaII FW and tuner scripts to V3_3_0_0.
	- Fix IR issue.

	-----------------------
		v11.06.10.1
	-----------------------
	- If any AP on, it will power on two demods and turners. (the same with OMEGAI sequence)
	  Then set the same frequency when AP on first time.
	- Fix "unplug & remove module" problem.
	- Fix "suspend/resume(S4)" problem(from QC report).
	- Change the "#endif#" to "#endif " in type.h.
	- Change the "AF15irtbl.bin" to "AF35irtbl.bin" in Get_IR_Info.c.
	- Modified "make remove" in makefile.
	  1.remove dvb-usb-it9135.ko
	  2.remove af35irtbl.bin
	  3.modprobe -r dvb_usb_it9135
	  4./sbin/depmod -a

	-----------------------
		v11.05.27.1
	-----------------------
	- First release.
	- Support Omega I and Omega II driver.
	- Update API to 2.3.20110426.0.
	- Update OmegaI/OmegaII FW and tuner scripts to V1_0_25_11/V3_1_0_0.
	- Support Linux kernel to 2.6.39.

5. Debug level usage
	IT913x Linux driver define four debug levels as follows :

	KERN_ERR	/* error conditions		*/
	KERN_WARNIN	/* warning conditions	*/
	KERN_NOTICE	/* normal but significant	*/
	KERN_INFO	/* informational		*/

	1) If you want to show error condition message, type the following command.

		In x86 32bit & 64bit CPU families in Linux.
		# echo 4 > /proc/sys/kernel/printk

	2) If you want to show warning condition message, type the following command.

		In x86 32bit & 64bit CPU families in Linux.
		# echo 5 > /proc/sys/kernel/printk

	3) If you want to show normal condition message, type the following command.

		In x86 32bit & 64bit CPU families in Linux.
		# echo 6 > /proc/sys/kernel/printk

	4) If you want to show information condition message, type the following command.

		In x86 32bit & 64bit CPU families in Linux.
		# echo 7 > /proc/sys/kernel/printk

	PS: 1) In console(virtual terminal CTRL+ALT+(F1~F6)) mode
	    2) After insmod IT913x driver module, console will print debug level message which you desired

6. Remote Control usage

	it913x_driver/rc/it913x-rc6.c   (create rc6 sample table module for raw mode)
	it913x_driver/rc/it913x-nec.c   (create nec sample table module for raw mode)
	it913x_driver/rc/it913x-irtbl.h (include rc6 and nec table define for HID mode)
	it913x_driver/rc/it913x-irtbl.c (the utility to create the "it9135irtbl.bin" file for HID mode)

	1) IT913x proprietary (raw) mode
		If you want to use RC6 protocol remote controller, insmod it913x-rc6-table.ko
		If you want to use NEC protocol remote controller, insmod it913x-nec-table.ko

	2) IT913x HID (keyboard) mode
		./it913x-irtbl -v 1 (create the "it9135irtbl.bin" file for RC6 protocol)
		./it913x-irtbl -v 2 (create the "it9135irtbl.bin" file for NEC protocol)
		Afterwards copy the bin file as "/lib/firmware/it913xirtbl.bin".

7. Test tools

	1) it913x_testkit: A console tool for IT913x verification.

		# cd it913x_testkit
		# make
		# ./it913x_testkit
		# 1. Lock Channel
		# => Please Input Your Choice: 1
		# => Please Input Frequency (KHz): 545000
		# => Please Input Bandwidth (KHz) (Ex: 8000 KHz): 6000
		# 3. Record & Analyze Packets
		# => Please Input Your Choice: 3
		# => Please Choice : 1
		# => Testing Times: 20

	2) it913x_testkit_multi_device: A muti-device test tool.

		Please refer the it913x_testkit_multi_device/Readme.txt for details.

8. How to modify USB trasfer buffer size?

	Modify URB_BUFSIZE size at the top of  src/it913x-core.c file
	ex: Modify "URB_BUFSIZE" to users want size
		static int URB_BUFSIZE = 65424;

9. How to dynamically change URB buffer size during debug mode?

  This function could let customers easily change urb buffer size during debug.
	(For the original # make install --- would use the default URB_BUFSIZE)
	The usage steps are as follows:

	 1) Remove the original driver
	    # make remove
	 2) Compiler the driver code:
	    # make
	 3) Customer could set the urb buffer size
	    # make cu_install URB_BUFSIZE=$(user_set_number)
			  ex:
				 (1) # make cu_install URB_BUFSIZE=32712  --- set URB_BUFSIZE=188*174=32712
                 (2) # make cu_install                    --- if no setting URB_BUFSIZE parameter after the rule,
				                                              driver would use the default URB_BUFSIZE in driver.
	 4) If you want to change ohter URB_BUFSIZE size
	    # make cu_remove
        # make cu_install URB_BUFSIZE=$(new_user_set_number)
			  ex:
				  # make cu_remove
                  # make cu_install URB_BUFSIZE=65424     --- set URB_BUFSIZE=188*348=65424
      
		(You can use these two commands reapeatedly until you find the most fit urb buffer size.)
		
